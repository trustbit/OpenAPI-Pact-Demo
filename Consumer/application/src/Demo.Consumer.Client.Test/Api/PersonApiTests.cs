/*
 * API for Demo
 *
 * # Goal This API Description is used as the basis to show code generating use-cases.   <SecurityDefinitions />
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Demo.Consumer.Client.Client;
using Demo.Consumer.Client.Api;
// uncomment below to import models
//using Demo.Consumer.Client.Model;

namespace Demo.Consumer.Client.Test.Api
{
    /// <summary>
    ///  Class for testing PersonApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PersonApiTests : IDisposable
    {
        private PersonApi instance;

        public PersonApiTests()
        {
            instance = new PersonApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PersonApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PersonApi
            //Assert.IsType<PersonApi>(instance);
        }

        /// <summary>
        /// Test DeletePerson
        /// </summary>
        [Fact]
        public void DeletePersonTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid personId = null;
            //instance.DeletePerson(personId);
        }

        /// <summary>
        /// Test GetPerson
        /// </summary>
        [Fact]
        public void GetPersonTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid personId = null;
            //var response = instance.GetPerson(personId);
            //Assert.IsType<Person>(response);
        }

        /// <summary>
        /// Test GetPersons
        /// </summary>
        [Fact]
        public void GetPersonsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetPersons();
            //Assert.IsType<List<Person>>(response);
        }

        /// <summary>
        /// Test UpdatePerson
        /// </summary>
        [Fact]
        public void UpdatePersonTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid personId = null;
            //Person person = null;
            //instance.UpdatePerson(personId, person);
        }
    }
}
